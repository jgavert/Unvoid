#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

struct particle {
 vec4 currPos;
 vec4 speedVec;
};

layout(std430, binding=0) buffer particles {
  particle p[];
};

uniform vec4 originPoint;
uniform float frameTimeDiff;
uniform uint maxParticles;


layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main(){
  uint gid = gl_GlobalInvocationID.x;
  if(gid < maxParticles) {
    particle part = p[gid];
    if(part.speedVec.a > 0.0) {
      part.currPos = part.currPos + vec4(part.speedVec.xyz, 0.0)*frameTimeDiff;
      part.speedVec.a = part.speedVec.a - (0.001*frameTimeDiff);
    } else {
      part.currPos = originPoint;
      part.speedVec.a = 1.0;
    }

    p[gid] = part;
  }
}
