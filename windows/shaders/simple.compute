#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

struct particle {
 vec3	currPos;
 vec3	speedVec;
 float ttl;
};

layout(std430, binding=0) buffer particles {
	struct particle p[];
};

uniform vec3 originPoint;
uniform float frameTimeDiff;
uniform uint maxParticles;


layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main(){
	uint gid = gl_GlobalInvocationID.x;
	if(gid < maxParticles) {
		particle part = p[gid];
		if(part.ttl > 0.0) {
			part.currPos = part.currPos + part.speedVec*frameTimeDiff;
			part.ttl = part.ttl - (0.2*frameTimeDiff);
		} else {
			part.currPos = originPoint;
			part.ttl = 30.0;
		}

		p[gid] = part;
	}
}