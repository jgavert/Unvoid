#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_NV_gpu_shader5 : enable

struct particle {
	mediump vec4	currPos;
	mediump vec4	speedVec;
	mediump float ttl;
};

layout(std430, binding=0) buffer particles {
	particle p[];
};

uniform mediump vec4 originPoint;
uniform mediump float frameTimeDiff;
uniform uint maxParticles;


layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main(){
  mediump vec4;
	uint gid = gl_GlobalInvocationID.x;
	if(gid < maxParticles) {
		particle part = p[gid];
    part.currPos.y = part.currPos.y + 0.5;
		if(part.ttl > 0.0) {
			part.currPos.y = 0.0;
			part.ttl = part.ttl - (1.0*frameTimeDiff);
      part.ttl = 0.0;
		} else {
			part.currPos = originPoint;
			part.ttl = 750.0;
		}

		p[gid] = part;
	}
}